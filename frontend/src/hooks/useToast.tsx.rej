diff a/frontend/src/hooks/useToast.tsx b/frontend/src/hooks/useToast.tsx	(rejected hunks)
@@ -1,27 +1,39 @@
 // Basit toast bildirimi yonetimi
-import { createContext, useContext, useState } from 'react';
+import { createContext, useContext, useState, ReactNode } from 'react';
+interface Toast {
+  id: number;
+  message: string;
+}
+
+interface ToastContextValue {
+  addToast: (message: string) => void;
+}
 
-const ToastContext = createContext();
+const ToastContext = createContext<ToastContextValue | undefined>(undefined);
 
-export function ToastProvider({ children }) {
-  const [items, setItems] = useState([]);
+export function ToastProvider({ children }: { children: ReactNode }) {
+  const [items, setItems] = useState<Toast[]>([]);
 
-  const addToast = (message) => {
+  const addToast = (message: string) => {
     const id = Date.now();
     setItems((v) => [...v, { id, message }]);
     setTimeout(() => setItems((v) => v.filter((t) => t.id !== id)), 3000);
   };
 
   return (
     <ToastContext.Provider value={{ addToast }}>
       {children}
       <div className="toast-container">
         {items.map((t) => (
           <div key={t.id} className="toast">{t.message}</div>
         ))}
       </div>
     </ToastContext.Provider>
   );
 }
 
-export const useToast = () => useContext(ToastContext);
+export const useToast = () => {
+  const ctx = useContext(ToastContext);
+  if (!ctx) throw new Error('ToastProvider gerekli');
+  return ctx;
+};
